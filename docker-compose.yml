version: "3.8"
services:
  wait:
    build: dockerwait
    depends_on:
      - localstack

  app:
    build: .
    ports:
      - '8000:8000'
    environment:
      - ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - QUEUE_URL=http://localstack:4566/000000000000/myqueue
      - LOG_LEVEL=INFO
    volumes:
      - ./s3/download:/download
      - ./s3/metadata:/metadata
    depends_on:
      wait:
        condition: service_completed_successfully

  localstack:
    image: localstack/localstack:latest
    ports:
      - '4566-4597:4566-4597'
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/localstack/localstack-script.sh:/etc/localstack/init/ready.d/script.sh
      - ./config/localstack/notification.json:/etc/localstack/init/ready.d/notification.json

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
        - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./config/grafana:/etc/grafana/provisioning

